<!--	articles with filter and search	-->

<apex:page controller="VfSearchController" sidebar="false" title="Knowledge Search" showHeader="false">

<style>

td{
vertical-align : top;
text-align: left;
}
.hardlink
{
width: 197px;
}
.bPageBlock .pbBody
{
padding:2px;
}
.bPageBlock .pbHeader
{
background:#001f31;
color: #FFFFFF;
}
.pbBody a, .lbBody a
{
color:#426398;
font-size:80%;
}
.heading
{
background:#001f31;
color: #FFFFFF;
 padding: 4px;
 font-weight:bold;
 font-family:Arial,Helvetica,sans-serif;
 border-radius: 4px 4px 0 0;
 }
 
 .btn, .button, .formulaButton, .btnWhatsNew
 {
background:url('/resource/btnbg');
 }
 .col1
 {
 width:601px;
 }
 .bPageBlock, .individualPalette .bPageBlock
 {
 background:transparent;
 border-radius:4px;
 border-color: #001E31;
 }
 .testing
 {
 background:#001f31;
 border-radius:4px;
 height: 130px;
  margin-bottom: 5px;
 }
 
 select,input
 {
 width: 165px;
 }
 .cate,.search
 {
 color: #FFFFFF;
    font-family: arial,helvetica,sans-serif;
    font-size: 85%;
    font-weight: bold;
    }
 
</style>

<div class="wrapper">
<apex:form >
<apex:panelGrid columns="2" >

<apex:panelGroup >

<div class="testing">
    <apex:pageBlock >
    <apex:outputText value=" " />
    <div style="float:left;background:transparent;">
        <apex:pageBlockSection columns="1" >
        <apex:dataTable value="{!dataCategoryGroupInfo}" var="dataCategory" id="dataCategory">
        
        <apex:column width="20%">
         <apex:outputLabel for="categoryType_{!dataCategory.name}" styleClass="cate" >Select {!dataCategory.name}</apex:outputLabel>
        <br />
        
        <select id="categoryType_{!dataCategory.name}" name="categoryType_{!dataCategory.name}" onchange = "refreshSearchResult()" >
        <option value="NoFilter">No Filter</option>
        <option value="All">All</option>
        
        <knowledge:categoryList categoryVar="category" categoryGroup="{!dataCategory.name}" rootCategory="All" level="-1">
        
        <option value="{!category.name}">
        <apex:outputText escape="false" value="{!LPAD(' ',6*category.depth,'&nbsp;')}"/>
        {!category.label}
        </option>
        
        </knowledge:categoryList>
        </select>
        </apex:column>
        
        </apex:dataTable>
        </apex:pageBlockSection>
    </div>
    <div  style="float:left;background:transparent;margin-top: -3px;">
    <table>
    
    <tr>
    <td>
        <apex:outputText value="Search By Keyword" styleClass="search"/> &nbsp;
     </td>  
     </tr>
    
     <tr>
    <td>
        <apex:inputText value="{!searchstring}" id="theSearchstring" maxlength="100" size="30" /> &nbsp;
     </td>   
     </tr>
     
     <tr>
     <td>
        <apex:commandButton value="Search" id="submitButton" style="width:80px;margin-left: 0;" reRender="theSearchResults" />
    </td>
     </tr>
     </table>
    </div>
    </apex:pageBlock>

</div>


<apex:panelGroup id="theSearchResults" >
<apex:pageBlock title="Top 10 for CheapTickets" >
<apex:panelGrid width="100%">
<div class="col1">
<table width="99%">
<tr>
<th width="35%">Title</th>
<th width="23%" style="padding-left:20px">Article Type</th>
<th width="37%" >Summary</th>
</tr>
</table>
</div>
<knowledge:articleList articleVar="article" categories="{!categoryKeyword}" Keyword="{!searchstring}" pageNumber="{!currentPageNumber}" hasMoreVar="false"   sortBy="mostViewed" pageSize="10">
<table width="99%">
<tr>
<td width="35%">
<apex:outputLink target="_blank" value="{!URLFOR($Action.KnowledgeArticle.View,article.id,['popup' = 'true'])}">{!article.title}</apex:outputLink>
</td>
<td width="23%" style="padding-left:20px;"><apex:outputText >{!article.articleTypeLabel}</apex:outputText></td>
<td width="37%" ><apex:outputText >{!article.abstract}</apex:outputText></td>
</tr>
</table>

</knowledge:articleList>
</apex:panelGrid>
</apex:pageBlock>
<apex:panelGrid columns="2">
<apex:commandLink action="{!previous}" value="Previous" style="{!IF(prevRequired = true,'display:block','display:none')}" reRender="theSearchResults"/>
<apex:commandLink action="{!next}" value="Next" style="{!IF(nextRequired = true,'display:block','display:none')}" reRender="theSearchResults"/>
</apex:panelGrid>
</apex:panelGroup>
</apex:panelGroup>
<!--</apex:panelGrid>
<apex:actionFunction action="{!refreshSearchResult}" name="refreshSearchResult" rerender="theSearchResults" >
</apex:actionFunction>
</apex:form>-->



<apex:panelGroup >
<div class="hardlink">
<apex:pageBlock >
<div class="heading">Training Center</div>
<p><a href="https://na1.salesforce.com/articles/How_To/Cancel-a-Print-Request?retURL=%2Fapex%2FArticlePage&popup=true">How to update ASK! profile</a> </p>
<p><a href="https://na1.salesforce.com/articles/Alert/Deffering-Payments-Process-1279566773914?retURL=%2Fapex%2FArticlePage&popup=true">World Atlas Reference Guide</a></p>
<p><a href="#">Training Video - moving from ADT to ADT 2.0</a></p>
<p><a href="#">Web ADT servicing for A and S Reservation</a></p>
<p><a href="#">Web ADT - Servicing for Hotels </a></p>
</apex:pageBlock>

<apex:pageBlock >
<div class="heading">Briefings</div>
<p><a target="_blank" href="#">26 October 2012 - OBZ and CTX RRD Briefing Process Update:RRD Call Recording Requests</a></p>
<p><a target="_blank" href="#">26 October 2012 - OBZ and CTX Sales Briefing - Book a Flight,Receive Coupon for 15% off Future Hotel Booking</a></p>
<p><a href="#">23 October 2012 - OBZ and CTX Service Briefing - Bug:Hotel Reservation Not Being charged at the Time of Booking </a></p>
<p><a href="#">23 October 2012 - OBZ and CTX CS Briefing - Clarification on NK Unconfirmed(UC) Bookings</a></p>
<p><a href="#">22 October 2012 - OBZ and CTX Sales and CS Briefing - CTX Online Air Service Fee at $14.99 for next few weeks</a></p>
</apex:pageBlock>

<apex:pageBlock >
<div class="heading">Bugs and Escalations</div>
<p><a href="#">CTX/OBZ: USPOS Work-around and Bugs </a></p>
<p><a href="#">Virus Attached to Fare Sales Email</a></p>
<p><a href="#">Work-around: zip code required but country does not have one</a></p>
<p><a href="#">Spirit(NX) baggage fees changed twice</a></p>
<p><a href="#">RightNow Log In Errors</a></p>
</apex:pageBlock>

</div>
</apex:panelGroup>


</apex:panelGrid>
<apex:actionFunction action="{!refreshSearchResult}" name="refreshSearchResult" rerender="theSearchResults" >
</apex:actionFunction>
</apex:form>

</div>
</apex:page>


<!--	class	-->

/**
* Controller for Visual force Page.
* author SFDC
*/
public with sharing class VfSearchController{
//Page Size
private Static Final Integer PAGE_NUMBER = 10;
//Search String used in ArticleList tag
public String searchstring { get; set; }
//Is new List reqd
private boolean isRefRequired = true;
//Exclude filter criteria for UI only
private static final String EXCLUDE_CRITERIA_FILTER = 'All';
//Keeps track of current page & max size of article list
Integer currentPage = 1;
Integer maxSize = 1;
//Returns array of Category Groups
public DataCategoryGroupInfo[] getDataCategoryGroupInfo() {

    DataCategoryGroupInfo[] dcgi = DataCategoryUtil.getInstance().getAllCategoryGroups();
    DataCategoryGroupInfo[] dcgi1 = new DataCategoryGroupInfo[2];
    for(integer i=1;i<dcgi.size();i++){
        dcgi1[i-1] = dcgi[i];
    }
    
return dcgi1;
}
//Returns category keyword required to filter articleList.
public String getCategoryKeyword() {
DataCategoryGroupInfo[] categoryGroups =
DataCategoryUtil.getInstance().getAllCategoryGroups();
String categoryCondition = '';
for (DataCategoryGroupInfo categoryGroup : categoryGroups) {
String selectedCategoryName =
System.currentPageReference().getParameters().Get('categoryType_'+categoryGroup.getName());
if(selectedCategoryName != null && !selectedCategoryName.equals('NoFilter')) {
if(categoryCondition=='' && selectedCategoryName != null){
categoryCondition=categoryCondition+categoryGroup.getName() + ':' +
System.currentPageReference().getParameters().Get('categoryType_'+categoryGroup.getName());
}else {
categoryCondition=categoryCondition + ',' +categoryGroup.getName() + ':' +
System.currentPageReference().getParameters().Get('categoryType_'+categoryGroup.getName());
}
}
}
String categoryFilter = '';
for (DataCategoryGroupInfo categoryGroup : categoryGroups) {
String categoryType =' ';
//System.currentPageReference().getParameters().Get('categoryType_'+categoryGroup.getName());

if(categoryType != null && !categoryType.equals('NoFilter')) {
if(categoryFilter == ''){
categoryFilter = categoryGroup.getName() + '__c ABOVE_OR_BELOW ' + categoryType +'__c';
system.debug('------categoryFilter--'+categoryFilter );

} else {
 categoryFilter = categoryFilter + ' AND ' + categoryGroup.getName() +'__c ABOVE_OR_BELOW ' + categoryType +'__c';
}
}
}
try {
if(categoryFilter.length()>0) {
if(searchString != null && searchString.length() >0 ) {
String searchquery = 'FIND \'' + searchString + '*\'IN ALL FIELDS RETURNING KnowledgeArticleVersion(Id, title, UrlName, LastPublishedDate,LastModifiedById where PublishStatus =\'online\' and Language = \'en_US\') WITH DATA CATEGORY '+categoryFilter ;
List<List<SObject>>searchList = search.query(searchquery);
List<KnowledgeArticleVersion> articleList = (List<KnowledgeArticleVersion>)searchList[0];
maxSize = articleList.size() ;
// maxSize = maxSize.divide(PAGE_NUMBER,2,System.RoundingMode.UP);
} else {
String qryString = 'SELECT Id, title, UrlName, LastPublishedDate,LastModifiedById FROM KnowledgeArticleVersion WHERE (PublishStatus = \'online\' and Language = \'en_US\') WITH DATA CATEGORY '+categoryFilter;
system.debug('***************************categoryFilter*************'+categoryFilter );
List<KnowledgeArticleVersion> articleList= Database.query(qryString);
maxSize = articleList.size() ;
// maxSize = maxSize.divide(PAGE_NUMBER,2,System.RoundingMode.UP);
}
} else {
String qryString = 'SELECT Id, title, UrlName, LastPublishedDate,LastModifiedById FROM KnowledgeArticleVersion WHERE (PublishStatus = \'online\' and Language = \'en_US\')';
List<KnowledgeArticleVersion> articleList= Database.query(qryString);
maxSize = articleList.size() ;
// maxSize = maxSize.divide(PAGE_NUMBER,2,System.RoundingMode.UP);
}}
catch(Exception e) {
Apexpages.addmessages( e );
}
if(categoryFilter =='') {
 maxSize = 0;
categoryCondition = '' ;
}
return categoryCondition;
}
// Action call when the new list needs to be fetched
public PageReference refreshSearchResult() {
maxSize = currentPage = 1;
return null;
}
// Returns whether we need to see previous button or not
public boolean getPrevRequired() {
return currentPage > 1;
}
// Returns whether we need to see next button or not
public boolean getNextRequired() {
return currentPage * PAGE_NUMBER < maxSize;
}
//Returns current page number
public Decimal getCurrentPageNumber() {
return this.currentPage;
}
//action for next click
public PageReference next() {
if(maxSize > this.currentPage * PAGE_NUMBER) {
this.currentPage = this.currentPage + 1;
}
return null;
}
//action for previous click
public PageReference previous() {
if(this.currentPage > 1)
this.currentPage = this.currentPage - 1;
return null;
}
}
